# Base Address Increments
# partial sum address increment = 2 ADDR_BYTE_OFFSET * 128 CHANNEL * (16 COLUMN - 3 KERNEL) = 3328
BAIT0L0A0 3328
# Weight address increment = handled by channel 
BAIT0L0A1 0
BAIT0L0A2 0
BAIT0L0A3 0

# column address increment = handled by channel 
BAIT0L1A0 0
BAIT0L1A1 0
BAIT0L1A2 16
BAIT0L1A3 0

# channel address increment = 8 PE * 4 WEIGHTS * 2 ADDR_BYTE_OFFSET 
BAIT0L2A0 64
BAIT0L2A1 16
BAIT0L2A2 0
BAIT0L2A3 0

BAIT0L3A0 0
BAIT0L3A1 0
BAIT0L3A2 0
BAIT0L3A3 0

# partial sum address increment = 8 PE * 2 ADDR_BYTE_OFFSET = 16
BAIT1L0A0 16
# bias  address increment = 8 PE * 2 ADDR_BYTE_OFFSET = 16
BAIT1L0A1 16
BAIT1L0A2 0
BAIT1L0A3 0

BAIT1L1A0 0
BAIT1L1A1 -256
BAIT1L1A2 0
BAIT1L1A3 0

BAIT1L2A0 0
BAIT1L2A1 0
BAIT1L2A2 0
BAIT1L2A3 0

BAIT1L3A0 0
BAIT1L3A1 0
BAIT1L3A2 0
BAIT1L3A3 0

# Loop Conditions
# row dimension
LCL0T0 2     
# channel dimension / 8
LCL0T1 15

# column dimension     
LCL1T0 2
LCL1T1 255

# channel dimension / (PE * 4)
LCL2T0 3
LCL2T1 0


# Task Addresses
TAT0E 28
TAT0S 0
TAT1E 37
TAT1S 29


# Task 0
CEOP E0
READ R7 B2(0)
READ R8 B1(0)
CEOP E1

READ R1 B0(0)
MUL R2 R8 R0
ADD R1 R2 R1
WRITE B0(0) R1 
SHIFT R7 R7 R6

READ R1 B0(1)
MUL R2 R9 R0
ADD R1 R2 R1
WRITE B0(1) R1 
SHIFT R7 R7 R6

READ R1 B0(2)
MUL R2 R10 R0
ADD R1 R2 R1
WRITE B0(2) R1 
SHIFT R7 R7 R6

READ R1 B0(3)
MUL R2 R11 R0
ADD R1 R2 R1
WRITE B0(3) R1
SHIFT R7 R7 R6
 
CEOP E0
BRANCH I2 L2 C0
BRANCH I1 L1 C0
BRANCH I1 L0 C0 
NOP

# Task 1
READ R2 B1(0)
READ R1 B0(0)
ADD R1 R2 R1
MAX R1 R1 R3
#SHIFT R1 R1 R4
WRITE B0(0) R1

BRANCH I29 L0 C0
BRANCH I29 L1 C0
NOP
