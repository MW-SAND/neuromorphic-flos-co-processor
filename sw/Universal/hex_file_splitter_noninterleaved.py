#!/usr/bin/env python3
""" 
This script has been generated by AI with minor tweaks from the author

This script splits a single hex file into multiple rows of hex files, without interleaved addresses
"""

import sys
import os


def split_hex_file_noninterleaved(input_filename, num_banks, words_per_bank):
    # Get the base name without extension.
    base_name, ext = os.path.splitext(input_filename)
    if ext.lower() != ".hex":
        print(
            f"Warning: Expected a .hex file; found '{ext}'. Proceeding anyway.")

    # Read all input words (one per nonempty line)
    try:
        with open(input_filename, "r") as infile:
            words = [line.rstrip("\n")
                     for line in infile if line.strip() != ""]
    except IOError as e:
        print(f"Error reading input file {input_filename}: {e}")
        sys.exit(1)

    total_required = num_banks * words_per_bank

    if len(words) < total_required:
        # Pad the output with 0 values: "00000000" to reach the required length.
        missing = total_required - len(words)
        print(
            f"Info: Input file has only {len(words)} words. Padding with {missing} zeros.")
        words.extend(["00000000"] * missing)
    elif len(words) > total_required:
        print("Warning: Input file contains more words than required. Extra words will be ignored.")
        words = words[:total_required]

    # Create each bank file and write the corresponding slice of words.
    for bank in range(num_banks):
        output_filename = f"{base_name}_{bank:03d}.hex"
        start_index = bank * words_per_bank
        end_index = start_index + words_per_bank
        try:
            with open(output_filename, "w") as outfile:
                # Write each word with a newline.
                for word in words[start_index:end_index]:
                    outfile.write(word + "\n")
        except IOError as e:
            print(
                f"Error: Unable to write to output file {output_filename}: {e}")
            sys.exit(1)

    print(
        f"Successfully split {input_filename} into {num_banks} banks with {words_per_bank} words each.")


def main():
    if len(sys.argv) != 4:
        print("Usage: python hex_splitter_noninterleaved.py <input_hex_file> <num_banks> <words_per_bank>")
        sys.exit(1)

    input_filename = sys.argv[1]
    try:
        num_banks = int(sys.argv[2])
        words_per_bank = int(sys.argv[3])
        if num_banks <= 0 or words_per_bank <= 0:
            raise ValueError(
                "Both the number of banks and the number of words per bank must be positive.")
    except ValueError as e:
        print(f"Error: {e}")
        sys.exit(1)

    split_hex_file_noninterleaved(input_filename, num_banks, words_per_bank)


if __name__ == "__main__":
    main()
