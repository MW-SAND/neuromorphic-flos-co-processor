#!/usr/bin/env python3
""" 
This script has been generated by AI with minor tweaks from the author

This script splits a single hex file into multiple rows of hex files, with interleaved addresses
"""

import sys
import os


def split_hex_file(input_filename, num_splits):
    # Get the base name without extension.
    base_name, ext = os.path.splitext(input_filename)
    if ext.lower() != ".hex":
        print(
            f"Warning: Expected a .hex file; found '{ext}'. Proceeding anyway.")

    # Prepare file handles for output files.
    out_files = []
    for i in range(num_splits):
        # Format index with three digits, e.g., 000, 001, ..., 031.
        output_filename = f"{base_name}_{i:03d}.hex"
        try:
            out_files.append(open(output_filename, "w"))
        except IOError as e:
            print(f"Error opening output file {output_filename}: {e}")
            # Cleanup any already opened files.
            for f in out_files:
                f.close()
            sys.exit(1)

    try:
        with open(input_filename, "r") as infile:
            for line_index, line in enumerate(infile):
                # Determine which output file to write to.
                out_index = line_index % num_splits
                out_files[out_index].write(line)
    except IOError as e:
        print(f"Error reading input file {input_filename}: {e}")
        sys.exit(1)
    finally:
        # Ensure all files are closed.
        for f in out_files:
            f.close()

    print(f"Successfully split {input_filename} into {num_splits} files.")


def main():
    if len(sys.argv) != 3:
        print("Usage: python hex_splitter.py <input_hex_file> <num_splits>")
        sys.exit(1)

    input_filename = sys.argv[1]
    try:
        num_splits = int(sys.argv[2])
        if num_splits <= 0:
            raise ValueError("Number of splits must be positive.")
    except ValueError as e:
        print(f"Error: {e}")
        sys.exit(1)

    split_hex_file(input_filename, num_splits)


if __name__ == "__main__":
    main()
